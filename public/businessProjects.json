{
  "projectsColumnLeft": [
    {
      "title": "Automação de Estoque - ELGScreen",
      "text": "Desenvolvi uma automação para atualizar o estoque do ERP, onde **arquivos XML** eram capturados via **API**, corrigidos em caso de erro e, em seguida, enviados ao servidor do ERP. O projeto foi implementado em **Python**, otimizando a gestão de estoque.",
      "tags": [
        { "text": "API", "icon": "apiIcon" },
        { "text": "Python", "icon": "pythonIcon" }
      ]
    },
    {
      "title": "Atualização de Pedidos - ELGScreen",
      "text": "Automação desenvolvida em Python para agilizar a atualização do status de pedidos entregues no Mercado Livre. A solução consulta a **API dos Correios** para verificar a entrega e, automaticamente, atualiza o status na **API do Mercado Livre**, tornando a liberação do **faturamento mais rápida.**",
      "tags": [
        { "text": "API", "icon": "apiIcon" },
        { "text": "Python", "icon": "pythonIcon" }
      ]
    },
    {
      "title": "Portfólio Pessoal",
      "text": "Este site também conta como projeto, certo? Aqui, aprofundei meus conhecimentos em **front-end** utilizando HTML, CSS, TypeScript e React. O protótipo foi criado no Figma e, a partir dele, desenvolvi o código. Durante o processo, apliquei conceitos como **Core Web Vitals, acessibilidade e SEO** para otimizar a experiência do usuário. Confira o código no [repositório](https://github.com/AlexdeJesusFS/portfolio).",
      "tags": [
        { "text": "HTML", "icon": "htmlIcon" },
        { "text": "CSS", "icon": "cssIcon" },
        { "text": "TypeScript", "icon": "tsIcon" },
        { "text": "React", "icon": "reactIcon" },
        { "text": "Figma", "icon": "figmaIcon" }
      ]
    }
  ],
  "projectsColumnRight": [
    {
      "title": "Integração Movidesk + WhatsApp",
      "text": "Integração entre o Service Desk Movidesk e o WhatsApp para envio automático de notificações aos clientes. Utilizando **Python** e a **API do Whatsapp**, a solução atualizava os clientes sempre que havia uma mudança no status dos tickets. Para isso, implementei uma **API** com **FastAPI** que recebia **webhooks** do Movidesk e enviava as mensagens de forma automática.",
      "tags": [
        { "text": "API", "icon": "apiIcon" },
        { "text": "Python", "icon": "pythonIcon" }
      ]
    },
    {
      "title": "Análise de Mercado - ELGScreen",
      "text": "Ferramenta para **identificar produtos populares no Mercado Livre** que ainda não eram comercializados pela empresa. A aplicação consultava a **API do Mercado Livre** para listar os **produtos mais vendidos** em uma determinada categoria e comparava com os itens registrados no banco de dados **SQL Server** da empresa. Utilizando **expressões regulares** e um framework de correspondência de texto, a ferramenta identificava similaridades superiores a 70% nos títulos. Os resultados eram exibidos na intranet, com imagens e links, facilitando a tomada de decisão estratégica. O projeto foi desenvolvido com **HTML, CSS e Python Django.**",
      "tags": [
        { "text": "API", "icon": "apiIcon" },
        { "text": "Python", "icon": "pythonIcon" },
        { "text": "SQL Server", "icon": "sqlserverIcon" }
      ]
    }
  ]
}
